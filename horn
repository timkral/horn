#!/usr/bin/env python

import argparse
import json
import os
import sys

from heimdall.setup.couchdbclient import CouchDBClient
from heimdall.setup.heimdallconfig import HeimdallConfig
from heimdall.setup.heimdallverifier import HeimdallVerifier

def config(args):
    config = __config()

    if args.view:
        config.load()
        print json.dumps(config.config_dict, indent=4, sort_keys=True)
    else:
        config.init()

def __config():
    file_dir = __file_dir()
    return HeimdallConfig(config_dir=file_dir)

def __file_dir():
    return os.path.dirname(os.path.realpath(__file__))

def push(args):
    config = __config()
    config.load()

    client = CouchDBClient(config)
    client.push()

def sync(args):
    config = __config()
    config.load()

    client = CouchDBClient(config)
    client.sync()

def verify(args):
    file_dir = __file_dir()
    verifier = HeimdallVerifier(config_dir=file_dir)

    verifier.verify()

if __name__ == '__main__':
    parser = argparse.ArgumentParser(prog='horn')
    subparsers = parser.add_subparsers()

    parser_config = subparsers.add_parser('config', help='setup heimdall configuration')
    parser_config.add_argument('--view', dest='view', action='store_true')
    parser_config.set_defaults(func=config)

#    parser_loadcommit = subparsers.add_parser('loadcommit', help='load a commit document into CouchDB')
#    parser_loadcommit.add_argument('sha1', help='sha1 of git commit')
#    parser_loadcommit.set_defaults(func=loadcommit)

    parser_push = subparsers.add_parser('push', help='push design documents to CouchDB')
    parser_push.set_defaults(func=push)

    parser_sync = subparsers.add_parser('sync', help='sync design documents from CouchDB')
    parser_sync.set_defaults(func=sync)

    parser_verify = subparsers.add_parser('verify', help='verify that your environment is correctly setup to use heimdall')
    parser_verify.set_defaults(func=verify)

    args = parser.parse_args()
    args.func(args)